-- Total number of tests
SELECT COUNT(*) FROM Test;


-- List of score, specifying for each the name and first name of the student who obtained it
SELECT score, name, firstname FROM Notation n
INNER JOIN Student s ON n.numstud = s.numstud;


-- List of score, specifying for each the name and first name of the student who obtained it and the wording of the matter concerned
SELECT score, name, firstname, wording FROM Notation n
INNER JOIN Student s ON n.numstud = s.numstud
INNER JOIN Test t ON n.numtest = t.numtest
INNER JOIN Matter m ON m.codemat = t.codemat;

-- List of score greater than or equal to 10
SELECT score FROM Notation
WHERE score >= 10;

-- Last name and first name of the students who obtained at least a score equal to 20
SELECT name, firstname FROM Student s
INNER JOIN Notation n ON n.numstud = s.numstud
WHERE n.score = 20;


-- Average scores for each student (indicate name and first name)
SELECT name, firstname, AVG(score) AS student_average_score FROM Student s
INNER JOIN Notation n ON n.numstud = s.numstud
GROUP BY s.numstud;

-- List of tests whose date is between January 1 and June 30, 2014
SELECT numtest, testdate FROM Test
WHERE testdate BETWEEN '2014-01-01' AND '2014-06-30';

-- List of tests (number, date and place) including the matter of the subject
SELECT numtest, testdate, place, wording FROM Test t
INNER JOIN Matter m ON t.codemat = m.codemat;

-- Average scores for each student (indicate name and first name)
SELECT name, firstname, AVG(score) AS student_score FROM Student s
INNER JOIN Notation n ON n.numstud = s.numstud
GROUP BY s.numstud
ORDER BY student_score DESC;


-- Average scores for matter (indicate the wording) comprising more than one test
SELECT AVG(score), wording FROM Matter m
INNER JOIN Test t ON t.codemat = m.codemat
INNER JOIN Notation n ON n.numtest = t.numtest
GROUP BY m.codemat
HAVING COUNT(DISTINCT t.numtest) > 1;

-- Average of score obtained in the tests (indicate the number of the test) where less than 6 students were rated
SELECT numtest, AVG(score) FROM Notation
GROUP BY numtest
HAVING COUNT(numstud) < 6;





